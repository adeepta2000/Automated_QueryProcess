@model AutomatedQueryProcess.Models.QueryModel

<style>
    textarea {
        resize: vertical;
        width: 100%;
        height: 250px;
        font-size: 12px;
    }
</style>

<form id="localForm" enctype="multipart/form-data" novalidate>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.AntiForgeryToken()
    <div class="row mb-2">
        <div class="form-group row">
            @Html.LabelFor(model => model.Query1, "First Query", htmlAttributes: new { @class = "col-sm-4 col-form-label" })
            <div class="col-sm-8">
                <div class="input-group input-group-sm">
                    @Html.TextAreaFor(model => model.Query1, new { htmlAttributes = new { @class = "form-control form-control-lg query", id = "query1" } })
                </div>
                @Html.ValidationMessageFor(model => model.Query1, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="form-group row">
            @Html.LabelFor(model => model.Query2, "Second Query", htmlAttributes: new { @class = "col-sm-4 col-form-label" })
            <div class="col-sm-8">
                <div class="input-group input-group-sm">
                    @Html.TextAreaFor(model => model.Query2, new { htmlAttributes = new { @class = "form-control form-control-lg query", id = "query2" } })
                </div>
                @Html.ValidationMessageFor(model => model.Query2, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mb-2">
        <div class="form-group row">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "col-sm-4 col-form-label" })
            <div class="col-sm-8">
                <div class="input-group input-group-sm">
                    @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "00:00 AM/PM", id = "time" } })
                </div>
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-md-12 text-center">
            <button type="button" id="btnFrmSubmit" class="btn btn-primary btn-sm" onclick="saveData()"> Save </button>
        </div>
    </div>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

</script>
